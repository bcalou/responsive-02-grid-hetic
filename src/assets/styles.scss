@import "reset";

@mixin large-screen {
  @media (min-width: 1400px) {
    @content;
  }
}

@mixin large-screen-unique {
  @media (min-width: 1400px) and (max-width: 2199px) {
    @content;
  }
}

@mixin very-large-screen {
  @media (min-width: 2200px) {
    @content;
  }
}

@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap");

* {
  box-sizing: border-box;
}

body {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  grid-auto-rows: 100px;
  grid-gap: 0.5rem;

  @include large-screen() {
    grid-gap: 5px;
    grid-template-columns: repeat(18, 1fr);
    grid-template-rows: repeat(9, 100px);
  }

  font-family: "Roboto", sans-serif;
}

img {
  max-width: 100%;
}
.el {
  background-color: lightgrey;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}
.el__name {
  font-size: 10px;
}

$types: alkaliMetal lanthanide nobleGas transitionMetal postTransitionMetal
  alkalineEarthMetal actinide metalloid otherNonMetal;

$periodes: 1 2 3 4 5 6 7 8 9;

$groups: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18;

$step: 360deg / length($types);

@each $type in $types {
  .el--#{$type} {
    $index: index($types, $type);
    background-color: hsl($step * $index, 80%, 80%);
  }
}

@include large-screen() {
  @for $i from 1 through 7 {
    .el[data-period="#{$i}"] {
      grid-row: #{$i};
    }
  }

  @for $i from 1 through 18 {
    .el[data-group="#{$i}"] {
      grid-column: #{$i};
    }
  }
}

@include large-screen-unique() {
  // Données positions
  $pos: 57 71 8, 89 103 9;

  @each $from, $to, $row in $pos {
    .el:nth-child(n + #{$from}):nth-child(-n + #{$to}) {
      grid-row: $row;
    }

    @for $i from $from through $to {
      .el:nth-child(#{$i}) {
        grid-column: $i - $from + 4;
      }
    }
  }
}

@include very-large-screen() {
  // Données positions
  @for $i from 3 through 18 {
    .el[data-group="#{$i}"] {
      grid-column: $i + 14;
    }
  }
}
